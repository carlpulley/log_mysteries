<h1>Partial Analysis of <%= link_to "santized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %> by Dr. Carl Pulley</h1>

<h2>Contents</h2>

<ul>
<li><%= link_to "Overview", '#overview' %>
<ul>
	<li><%= link_to "Analysis Environment and Tool Features", '#tool_features' %></li>
	<li><%= link_to "Initial Data Processing and Triage", '#triage' %></li>
	<li><%= link_to "Timeline", '#timeline' %></li>
</ul>
</li>
<li>Research
<ul>
	<li><%= link_to "IP Addresses", "/research/ip_address" %></li>
	<li><%= link_to "Wordpress", "/research/by?tagged=wordpress" %>
		<ul>
			<li><%= link_to "Blog", "/research/wordpress/core" %>
			<li>Plugins
				<ul>
					<li><%= link_to "Contact Form 7", "/research/wordpress/plugin/contact-form-7" %></li>
					<li>Google Syntax Highlighter
						<ul>
							<li><%= link_to "Google Syntax Highlighter", "/research/wordpress/plugin/google-syntax-highlighter" %></li>
							<li><%= link_to "Easy Google Syntax Highlighter", "/research/wordpress/plugin/easy-google-syntax-highlighter" %></li>
						</ul>
					</li>
					<li><%= link_to "Google Analyticator", "/research/wordpress/plugin/google-analyticator" %></li>
				</ul>
			</li>
		</ul>
	</li>
	<li><%= link_to "RSS News Feed", "/research/by?tagged=rss" %> Analysis for:
		<ul>
			<li><%= link_to "10.0.1.2", "/research/web_server/rss/10.0.1.2" %></li>
			<li><%= link_to "208.80.69.74", "/research/web_server/rss/208.80.69.74" %></li>
			<li><%= link_to "65.88.2.5", "/research/web_server/rss/65.88.2.5" %></li>
			<li><%= link_to "76.191.195.140", "/research/web_server/rss/76.191.195.140" %></li>
		</ul>
	</li>
	<li><%= link_to "Scanning", "/research/by?tagged=scan" %> Analysis:
		<ul>
			<li><%= link_to "World of Warcraft", "/research/scan/world-of-warcraft" %></li>
			<li><%= link_to "Proxy", "/research/scan/proxy" %></li>
			<li><%= link_to "Port 6677", "/research/scan/port-6677" %></li>
			<li><%= link_to "Port 6667", "/research/scan/port-6667" %></li>
		</ul>
	</li>
	<li><%= link_to "Web Bot", "/research/by?tagged=bot" %> Analysis:
		<ul>
			<li><%= link_to "NaverBot", "/research/bot/naverbot" %></li>
		</ul>
	</li>
</ul>
</li>
<li>Data Analysis
<ul>
	<li><%= link_to "unknown attribute", "/report/log_events/unknown" %></li>
	<li><%= link_to "processes", "/report/log_events/process" %></li>
	<li><%= link_to "file system", "/report/log_events/file_system" %></li>
</ul>
</li>
</ul>

<h2><a name="overview">Overview</a></h2>

<p>Throughout this report, CSV copies of the data sets used in each research section may be accessed and downloaded via the section's appendix. This CSV data allows for the data to be explored outside of this Rails application (eg. in <%= link_to "GGobi", "http://www.ggobi.org/" %>, <%= link_to "Gephi", "http://gephi.org/" %> or <%= link_to "Aftertime", "http://www.holmes.nl/NFIlabs/Aftertime/index.html" %>) and for our graphs and results to be independently verified.</p>

<p>This partial analysis of <%= link_to "santized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %> arose out of a partial attempt at the Log Mysteries Honeynet challenge (unfortunately teaching workloads stopped any chance of a realistic challenge submission by the author!). The author's partial attempt was then refined into an exercise to see how much of the challenge could be solved by <b>just</b> examining data within <%= link_to "santized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %> that was <b>only</b> related to the Apache process - this meant that the author restricted their analysis to just the Apache2 web logs (ie. apache2/*.log) and the sudo events within auth.log (eg. via <code>grep sudo auth.log</code>).</p>

<p>Throughout the analysis, we are attempting to follow the scientific method (eg. see the <%= link_to "Handbook of Digital Forensics and Investigation", "http://www.elsevierdirect.com/product.jsp?isbn=9780123742674" %> by Eoghan Casey) and to utilise data visualisation techniques (eg. see <%= link_to "Applied Security Visualisation", "http://www.informit.com/store/product.aspx?isbn=0321510100" %> by Raffael Marty and <%= link_to "Security Data Visualisation", "http://nostarch.com/securityvisualization.htm" %> by Greg Conti) to mine our (restricted) data set for as much forensic data as is realistically possible.</p>

<h3><a name="tool_features">Analysis Environment and Tool Features</a></h3>

<p>We have chosen to build a Rails 3 application (running on top of Ruby 1.9.2 RC2 within a RVM environment) to offer a visual and interactive web report. All report graphing is performed using <%= link_to "Protovis 3.2", "http://vis.stanford.edu/protovis/" %>. All analysis has been performed using an Ubuntu 10.04 operating system.</p>

<p>Using Git, we hope to be able to capture the full development process for our final report with Git branches capturing the different investigative phases. Whilst the author is still experimenting with this approach to forensic documentation, it is hoped that the idea might be of use to others. This entire web application (complete with its development history) is available via the author's Github project <%= github_link "", "log mysteries" %>. At some point in the near future, I'll aim to reshape this current development tree in an attempt to produce a formal report of the investigative process as applied to produce this report.</p>

<p>All log data has been parsed and processed using Rake tasks and then loaded into various Rail's models (for each log file, we have an associated model). The author has found that ActiveSupport provides an excellent platform by which one may slice and dice the data sets for further examination and analysis. Additionally:
	<ul>
		<li>the use of single table inheritance allows complex log files (eg. auth.log) to be partitioned into submodels for each process entry</li>
		<li>hooks and events are used to trigger the collection of extra meta-information from, for example, trusted web site sources.</li>
		<li>the use of <%= link_to "acts as nested set", "http://github.com/joaovitor/nested_set" %> allows for log event models to be partitioned into related event hierarchies (eg. www-access.log referrer relationships)</li>
		<li>the use of <%= link_to "acts as taggable on", "http://github.com/mbleigh/acts-as-taggable-on" %> allows the examiner to tag events so that categorisation and classifications can be derived</li>
		<li><%= link_to "finite state machines", "http://github.com/qoobaa/transitions" %> allow models to be parsed and their events grouped into agent or process traces.</li>
	</ul>
</p>

<p>We use controllers to partition our data analysis phases:
	<ul>
		<li>the research controller produces views based on the analysis of defined subsets of data;</li>
		<li>the report controller produces views that draw together the individual analyses into a single report.</li>
	</ul>
Within our Git repository we intend to place the research and report controller code development on the obviously named branches (although this has yet to be done!). We reserve the master Git branch to model the code for our final product where both the research and report branches have been merged.</p>

<p>Unit testing (using <%= link_to "shoulda", "http://github.com/thoughtbot/shoulda" %>) has been used to perform any hash based verification of downloaded files and to verify any facts that subsequent analysis might wish to use. Integration testing is used to ensure that all downloadable files (ie. CSV and PDF) are identical to those used in producing this report.</p>

<p>The automatic generation of CSV data in the research appendices allows readers to independently analyse data sets outside of this Rails application.</p>

<p>The automatic generation of PDF reports (eg. via <%= link_to "Prince", "http://www.princexml.com/" %>) allows for a final paper-based report to be <%= link_to "generated", "/report/index.pdf" %>.</p>

<h3><a name="triage">Initial Data Processing and Triage</a></h3>

<p>Our <%= link_to "sanitized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %> archive is <%= github_link "lib/tasks/sanitized_log.rake", "downloaded" %> and its type and SHA1 hash sum is <%= github_link "test/unit/santitized_log_test.rb", "verified" %>. This zip archive is found to contain the following information within its index:
<pre>
<%= SanitizedLog.all.map { |d| d.to_s }.join("\n") %>
</pre>
</p>

<p>We now extract, verify and check the consistency of www-access.log (<%= github_link "lib/tests/www_access.rake", "extraction" %>; <%= github_link "test/unit/www_access_test.rb", "verification" %>; <%= github_link "test/unit/apache2/access_log_contents_test.rb", "consistency" %>), www-media.log (<%= github_link "lib/tasks/www_media.rake", "extraction" %>; <%= github_link "test/unit/www_media_test.rb", "verification" %>; <%= github_link "test/unit/apache2/access_log_contents_test.rb", "consistency" %>) and www-error.log (<%= github_link "lib/tasks/www_error.rake", "extraction" %>; <%= github_link "test/unit/www_error_test.rb", "verification" %>; <%= github_link "test/unit/apache2/error_log_contents_test.rb", "consistency" %>).</p>

<p>Next, we <%= github_link "lib/tasks/auth.rake", "extract" %>, <%= github_link "test/unit/auth_test.rb", "verify" %> and check the <%= github_link "test/unit/auth/auth_log_contents_test.rb", "consistency" %> of auth.log followed by a  <%= github_link "lib/tasks/sudo.rake", "refactoring" %> (<%= github_link "test/unit/sudo_test.rb", "verification" %>) of the Auth model into the Sudo model.</p>

<p>By <%= link_to "analysing", "/research/ip_address" %> the Apache log remote IP addresses, we may now group IP addresses to form the following potential networks (based on country code, ASN and subnet):
<ul>
	<li>10.0.1.2 and 10.0.1.14 (/28 subnet)</li>
	<li>China
		<ul>
			<li>ASN = 4837
				<ul>
					<li>123.4.42.80, 123.4.51.181, 123.4.59.21, 123.4.59.174 and 123.11.240.130 (/12 subnet)</li>
					<li>125.45.106.168 and 125.45.106.180 (/27 subnet)</li>
					<li>221.192.199.35 and 221.194.47.162 (/14 subnet)</li>
				</ul>
			</li>
			<li>ASN = 24376
				<ul>
					<li>203.209.253.30, 203.209.253.31, 203.209.253.33 and 203.209.253.34 (/26 subnet)</li>
				</ul>
			</li>
			<li>ASN = 4134
				<ul>
					<li>61.183.15.9</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Dominion Republic
		<ul>
			<li>ASN = 6400
				<ul>
					<li>190.166.87.164 and 190.167.70.87 (/15 subnet)</li>
					<li>201.229.176.217</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Korea
		<ul>
			<li>ASN = 23576
				<ul>
					<li>114.111.36.26</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Netherlands
		<ul>
			<li>ASN = 12859
				<ul>
					<li>193.109.122.15, 193.109.122.18, 193.109.122.33, 193.109.122.52, 193.109.122.56 and 193.109.122.57 (/26 subnet)</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Norway
		<ul>
			<li>ASN = 44381
				<ul>
					<li>92.62.43.77</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>United States
		<ul>
			<li>ASN = 19165
				<ul>
					<li>208.80.69.69 and 208.80.69.74 (/28 subnet)</li>
				</ul>
			</li>
			<li>ASN = 3356
				<ul>
					<li>65.88.2.5</li>
				</ul>
			</li>
			<li>ASN = 7065
				<ul>
					<li>76.191.195.140</li>
				</ul>
			</li>
		</ul>
	</li>
</ul>
</p>

<p>Given that IP address <%= link_to "10.0.1.2", "/research/web_server/rss/10.0.1.2" %> accounts for ??% of the logged traffic, we analyse the log events associated with this IP address first. TODO: plot ip_address/user_agent vs number of events (pie chart?)</p>

<p>Based on those URLs matching <code>^/wp-content/</code> in www-media.log, we have that <%= link_to "Wordpress", "/research/wordpress/core" %> is installed along with the plugins:
	<ul>
		<li><%= link_to "Contact Form 7", "/research/wordpress/plugin/contact-form-7" %> (<%= github_link "lib/tasks/contact_form_7.rake", "download" %>; <%= github_link "test/unit/contact_form7_test.rb", "verification" %>)</li>
		<li><%= link_to "Google Syntax Highlighter", "/research/wordpress/plugin/google-syntax-highlighter" %> (<%= github_link "lib/tasks/google_syntax_highlighter.rake", "download" %>; <%= github_link "test/unit/google_syntax_highlighter_test.rb", "verification" %>) or <%= link_to "Easy Google Syntax Highlighter", "/research/wordpress/plugin/easy-google-syntax-highlighter" %> (<%= github_link "lib/tasks/easy_google_syntax_highlighter.rake", "download" %>; <%= github_link "test/unit/easy_google_syntax_highlighter_test.rb", "verification" %>)</li>
		<li><%= link_to "Google Analyticator", "/research/wordpress/plugin/google-analyticator" %> (<%= github_link "lib/tasks/google_analyticator.rake", "download" %>; <%= github_link "test/unit/google_analyticator_test.rb", "verification" %>).</li>
	</ul>
	Plugin names have been determined by matching URI's against the pattern <code>^/wp-content/plugins/([^/]+)/</code>. Google searches of <%= link_to "wordpress.org", "http://wordpress.org/extend/plugins/" %> have then been performed using the contents of the match variable <code>$1</code>.
</p>

<p>An analysis of Wordpress and its plugins reveals that:
	<ul>
		<li>Wordpress is at version 2.9.2 and data is consistent with a standard install</li>
		<li>some form of page caching mechanism is employed (this is based on viewing URI's that match <code>^/wp-content/themes/optimize</code>)</li>
		<li>the Wordpress plugin Contact Form 7 is installed at version 2.1.1 and data is consistent with a standard install</li>
		<li>the Wordpress plugin Google Syntax Highlighter is installed at version 1.5.1 and whilst this appears to be a standard install, there is evidence that some form of customisation (ie. the URI <code>/wp-content/plugins/google-syntax-highlighter/Scripts/shBrushBash.js</code>) has occurred</li>
		<li>the Wordpress plugin Google Analyticator is installed at version 6.0.2 and data is consistent with a standard install</li>
	</ul>
	TODO: add in analysis of plugins based on page cache names
</p>

<p>An analysis of the unique ID value in each log entry reveals that:
	<ul>
		<li>Apache2 is at version 2.2.2 or below</li>
		<li>within www-media.log we have the anomalous event: <center><code><%= @anomalies[:unknown].map { |collect| collect.map { |d| d.to_s }.join("\n") }.join("\n") %></code></center></li>
		<li>the Apache2 process was restarted at the following times: ??</li>
		<li>between ?? and ?? the web server did not restart</li>
		<li>the server may have been restarted at ??</li>
	</ul>
</p>

<h2><a name="timeline">Timeline</a></h2>

<% data = [] %>
<% data << { :label => "10.0.1.14: POST /wp-cron.php?doing_wp_cron", :timeline => @log_events.ip_address("10.0.1.14").tagged_with("wordpress").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "10.0.1.2: Apple-PubSub", :timeline => @log_events.ip_address("10.0.1.2").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "10.0.1.2: OSX 10.6; Firefox 3.6.3", :timeline => @log_events.ip_address("10.0.1.2").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "10.0.1.2: OSX 10.6; Safari 4.0.5", :timeline => @log_events.ip_address("10.0.1.2").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) AppleWebKit/531.22.7 (KHTML, like Gecko) Version/4.0.5 Safari/531.22.7").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "65.88.2.5: Apple-PubSub", :timeline => @log_events.ip_address("65.88.2.5").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "65.88.2.5: OSX 10.6; Firefox 3.6.3", :timeline => @log_events.ip_address("65.88.2.5").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "208.80.69.74: Apple-PubSub", :timeline => @log_events.ip_address("208.80.69.74").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "208.80.69.69: OSX 10.6; Safari 4.0.4", :timeline => @log_events.ip_address("208.80.69.69").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "76.191.195.140: Apple-PubSub", :timeline => @log_events.ip_address("76.191.195.140").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "123.4.59.174: Windows XP; IE 6.0", :timeline => @log_events.ip_address("123.4.59.174").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "125.45.106.180: Windows XP; IE 6.0", :timeline => @log_events.ip_address("125.45.106.180").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.59.21: Windows XP; IE 6.0", :timeline => @log_events.ip_address("123.4.59.21").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "125.45.106.168: Windows XP; IE 6.0", :timeline => @log_events.ip_address("125.45.106.168").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.42.80: Windows XP; IE 6.0", :timeline => @log_events.ip_address("123.4.42.80").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.11.240.130: Windows XP; IE 6.0", :timeline => @log_events.ip_address("123.11.240.130").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.51.181: Windows XP; IE 6.0", :timeline => @log_events.ip_address("123.4.51.181").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "190.167.70.87: Windows XP; Chrome 4.1.249.1045", :timeline => @log_events.ip_address("190.167.70.87").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "190.166.87.164: Windows XP; Chrome 4.1.249.1059", :timeline => @log_events.ip_address("190.166.87.164").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "201.229.176.217: Windows XP; Firefox 3.0.19", :timeline => @log_events.ip_address("201.229.176.217").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "Naverbot", :timeline => @log_events.tagged_with("bot").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "World of Warcraft Scanning", :timeline => @log_events.tagged_with("world-of-warcraft,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Proxy Scanning", :timeline => @log_events.tagged_with("proxy,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Port 6677 Scanning", :timeline => @log_events.tagged_with("port-6677,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Port 6667 Scanning", :timeline => @log_events.tagged_with("port-6667,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "Server Loading Estimate", :timeline => @log_events.ip_address("10.0.1.2").tagged_with("rss").order(:observed_at).all.select { |d| d.processing_time >= 3*(10**6) }.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "Out of order Log Events", :timeline => @log_events.ip_address("10.0.1.2").tagged_with("rss").order(:observed_at).all.select { |d| d.processing_time >= 3*(10**6) }.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "Apache events", :timeline => Sudo.tagged_with("apache").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>

<script type="text/javascript+protovis">
	var data = <%=raw data.to_json %>;
	var events = "current-events";

	<%= render :partial => '/graph/timeline.js' %>

	vis.render();
</script>

<div id="current-events" class="events">
</div>

<h2>Appendix</h2>

<%= link_to "Apache2 Data Set (CSV)", "/research/by.csv?#{params.keys.select { |k| ["ip_address", "user_agent", "tagged"].member? k }.map { |k| [k, params[k]].join("=") }.join("&") }" %><br />

<%= link_to "Auth Data Set (CSV)", "/research/by.csv?#{params.keys.select { |k| ["ip_address", "user_agent", "tagged"].member? k }.map { |k| [k, params[k]].join("=") }.join("&") }" %>

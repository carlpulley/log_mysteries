<% content_for :title do %>
	Server Loading Estimate: Number of Requests
<% end %>

<% content_for :data do %>
<%
	def map_to_hash(data)
	  data.map { |t, c| { :observed_at => t, :num_requests => c } }
	end
-%>
	<script>
		var raw_data = <%=raw (map_to_hash @data).map { |d| { :observed_at => d[:observed_at].to_f, :num_requests => d[:num_requests] } }.to_json %>;
	</script>
<% end %>
	
<% content_for :note do %>
	<h3>plot of event creation time (seconds from epoch) vs number of requests</h3>
	
	<%
		mean = mean(@data.map { |d| d[:num_requests] })
		stddev = standard_deviation(@data.map { |d| d[:num_requests] })
		averg = average(@data.map { |d| d[:num_requests] })
		max_load = @data.map { |d| d[:num_requests] }.max
		upper_time_bound = [mean+stddev, averg+stddev].max
		upper_bound_color = "#FF2D26"
	%>
	
	<script type="text/javascript+protovis">	
		var data = raw_data.map(function(d) { var h = {}; h['x'] = d['observed_at']; h['y'] = d['num_requests']; return h; });
		
		<%= render :partial => '/graph/area.js' %>
	
		vis.add(pv.Rule)
			.bottom(y(<%= upper_time_bound %>))
			.strokeStyle(<%=raw upper_bound_color.to_json %>);
	
		xlabel.text(function(d) pv.Format.date("%d/%b/%y %H:%M:%S")(new Date(d*1000)));
		ylabel.text(function(d) d);
	
		vis.render();
	</script>
	<p>
		<b>Notes:</b>
		<ul>
			<li>Here our mean is <%= number_with_precision mean, :precision => 1 %> requests (standard deviation is <%= number_with_precision stddev, :precision => 1 %> requests) and our average is <%= number_with_precision averg, :precision => 1 %> requests.</li>
			<li>Thus, if the number of requests handled is greater than <%= number_with_precision(upper_time_bound, :precision => 1) %> then this indicates when the server is being loaded. This cut off point has been plotted as a <font color="<%= upper_bound_color %>">red</font> line on the above graph.</li>
			<li>The following features of this graph are worth noting (as they are indicators that are further consistent with server loading):
				<ul>
					<li>the largest peak is <%= number_with_precision(max_load/upper_time_bound, :precision => 1) %> times larger than our expected upper time bound (ie. the <font color="<%= upper_bound_color %>">blue</font> line)</li>
					<li>the following log events indicate when the server appears to be experiencing higher than expected loading:
						<%= render :partial => 'data', :locals => { :data => ApacheAccess.tagged_with(["loading", "speed"]).order(:observed_at).all } %>
					</li>
				</ul>
			</li>
		</ul>
	</p>
<% end %>

<h1>Partial Analysis of <%= link_to "santized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %></h1>

<h2>Analysis Environment</h2>

<p><%= link_to "Ubuntu 10.04", "http://acme-labs.org.uk/teaching/huddersfield/current/vmware/" %> virtual machine.</p>

<h2>Contents</h2>

<ul>
	<li><%= link_to "Wordpress", "/report/by?tagged=wordpress" %>
		<ul>
			<li><%= link_to "Blog", "/report/wordpress/core" %>
			<li>Plugins
				<ul>
					<li><%= link_to "Contact Form 7", "/report/wordpress/plugin/contact-form-7" %></li>
					<li>Google Syntax Highlighter
						<ul>
							<li><%= link_to "Google Syntax Highlighter", "/report/wordpress/plugin/google-syntax-highlighter" %></li>
							<li><%= link_to "Easy Google Syntax Highlighter", "/report/wordpress/plugin/easy-google-syntax-highlighter" %></li>
						</ul>
					</li>
					<li><%= link_to "Google Analyticator", "/report/wordpress/plugin/google-analyticator" %></li>
				</ul>
			</li>
		</ul>
	</li>
	<li><%= link_to "RSS News Feed", "/report/by?tagged=rss" %> Analysis for:
		<ul>
			<li><%= link_to "10.0.1.2", "/report/web_server/rss/10.0.1.2" %></li>
			<li><%= link_to "208.80.69.74", "/report/web_server/rss/208.80.69.74" %></li>
			<li><%= link_to "65.88.2.5", "/report/web_server/rss/65.88.2.5" %></li>
			<li><%= link_to "76.191.195.140", "/report/web_server/rss/76.191.195.140" %></li>
		</ul>
	</li>
	<li><%= link_to "Scanning", "/report/by?tagged=scan" %> Analysis:
		<ul>
			<li><%= link_to "World of Warcraft", "/report/scan/world-of-warcraft" %></li>
			<li><%= link_to "Proxy", "/report/scan/proxy" %></li>
			<li><%= link_to "Port 6677", "/report/scan/port-6677" %></li>
			<li><%= link_to "Port 6667", "/report/scan/port-6667" %></li>
		</ul>
	</li>
	<li><%= link_to "Web Bot", "/report/by?tagged=bot" %> Analysis:
		<ul>
			<li><%= link_to "NaverBot", "/report/bot/naverbot" %></li>
		</ul>
	</li>
</ul>

<h2>Overview</h2>

<p>A visual examination of www-access.log and www-media.log suggests that we should initially group the data by: the remote IP address; and the user agent string (see the appendix below). Using this grouping of our data, we may then tag (see lib/tasks/tag_log_events.rake) Log Entry instances based on their observed interactions with our web server. The top-level links in our contents listing above represent the results of this analysis.</p>

<p>www-access.log holds access information for each page that a client requests, whilst www-media.log holds access information for the resources on each page requested.</p>

<p>By examining the referrer attributes of log entries tagged with <%= link_to "wordpress", "/report/by?tagged=wordpress" %> we are able to identify that the Apache server is hosting web sites located at:
	<ul>
		<li>http://www.domain.org/</li>
		<li>http://24.4.108.196/</li>
	</ul>
Which leads one to suspect that the server is possibly located at 24.4.108.196 and www.domain.org resolves to this IP address.
</p>

<h2>Appendix</h2>

<h3>Log Events <%= " Tagged with: #{params[:tagged]}" if params[:tagged] %> (Grouped by IP address and User Agent)</h3>

<script type="text/javascript+protovis">
	<%= render :partial => 'report/graph/spark.js' %>
</script>
<% addresses = @log_events.group(:remote).select(:remote).all.map { |d| d.remote } %>
<% agents = @log_events.group(:user_agent).select(:user_agent).all.map { |d| d.user_agent } %>
<% addresses.each do |address| %>
	<% agents.each do |agent| %>
		<% unless @log_events.ip_address(address).user_agent(agent).order(:observed_at).count == 0 %>
			<div class="header">
				<div class="ip_address">IP Address: <i><%= address %></i></div>
				<div class="user_agent">User Agent: <i><%= agent %></i></div>
			</div>
			<div class="matrix">
				<script type="text/javascript+protovis">
					var data = <%=raw @log_events.ip_address(address).user_agent(agent).order(:observed_at).where("unknown != '-'").select(:unknown).all.map { |d| d.unknown.split("").map_with_index { |d, i| [i, d.ord] }.inject({}) { |h, e| h[e[0]] = e[1]; h } }.to_json %>;
				
					<%= render :partial => 'report/graph/matrix.js' %>
				
					vis.render();
				</script>
			</div>
			<div class="events">
				<% @log_events.ip_address(address).user_agent(agent).order(:observed_at).all.each do |event| %>
					<div class="event"><%=raw event.to_html(@log_events) %></div>
				<% end %>
			</div>
		<% end %>
	<% end %>
<% end %>

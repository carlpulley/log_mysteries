<% content_for :data do %>
<%
	def map_to_hash(data)
	  data.map { |m| { :request_method => m.apache_access.http_method, :request_name => m.apache_access.http_url, :request_size => m.apache_access.bytes, :request_status => m.apache_access.result, :archive_name => m.archive_content.name, :archive_size => m.archive_content.size, :partial_match => m.tag_list.member?("basename") } }
	end
-%>
	<script>
		var raw_data = <%=raw (map_to_hash @data).to_json %>;
		var raw_full_data = <%=raw (map_to_hash @data).select { |d| not d[:partial_match] }.to_json %>;
		var raw_partial_data = <%=raw (map_to_hash @data).select { |d| d[:partial_match] }.to_json %>;
	</script>
<% end %>

<% content_for :note do %>
	<p>Examination of the ver parameter string for log entries tagged with <%= link_to "google-syntax-highlighter", "/research/by?tagged=google-syntax-highlighter,version" %> does not reveal anything regarding this plugin's version number.</p>
	
	<p>By Googling with the keywords <%= link_to "wordpress plugin google-syntax-highlighter", "http://google.co.uk/search?q=wordpress+plugin+google-syntax-highlighter" %>, we are able to locate the <%= link_to "Easy Google Syntax Highlighter", "http://wordpress.org/extend/plugins/easy-google-syntax-highlighter/" %> plugin.</p>
	
	<p>According to the <%= link_to "Easy Google Syntax Highlighter", "http://wordpress.org/extend/plugins/easy-google-syntax-highlighter/" %> plugin web page, this plugin was last updated on the 22<sup>nd</sup> October 2009. As a result, we are led to believe that this plugin is probably at version 1.2.1 since all our ApacheAccess events occur with the logged year dates: <%= ApacheAccess.all.map { |d| d.observed_at.year }.uniq.join("; ") %>.</p>
	
	<p>Downloading version 1.2.1 of Easy Google Syntax Highlighter then allows us to match the contents of the resulting archive against instances of the ApacheAccess model.</p>
	
	<p>This archive is found to contain the following information within its index:
	<pre>
	<%= EasyGoogleSyntaxHighlighter.all.map { |d| d.to_s }.join("\n") %>
	</pre>
	</p>
	
	<p>URLs that are present in both the ApacheAccess model and version 1.2.1 of the downloaded Easy Google Syntax Highlighter archive are as follows:
		<ul>
			<li>
			<% full_matches = @data.select { |d| not d[:partial_match] }.map { |d| d[:archive_name] }.uniq %>
			<%= "No URL matches found" if full_matches.empty? %>
			<% unless full_matches.empty? %>
			Full URL matches:
				<ul>
				<% full_matches.each do |url| %>
					<li><i><%= url %></i></li>
				<% end %>
				</ul>
			<% end %>
			</li>
			<li>
			<% partial_matches = @data.select { |d| d[:partial_match] }.map { |d| d[:archive_name] }.uniq %>
			<%= "No partial (ie. basename) URL matches found" if partial_matches.empty? %>
			<% unless partial_matches.empty? %>
			Partial (ie. basename) URL matches:
				<ul>
				<% partial_matches.each do |url| %>
					<li><i><%= url %></i></li>
				<% end %>
				</ul>
			<% end %>
			</li>
		</ul>
	</p>
	
	<p>Beyond file names, the lack of any size based matches suggest that it is highly unlikely that this plugin has been used.</p>
	
	<h2>Partial Matching: plugin file and URL file (file names) vs. file size (bytes)</h2>
	
	<script type="text/javascript+protovis">
		var labels = raw_partial_data.map(function(d) d.request_method+" "+d.request_name+": "+d.request_status+" =?= "+d.archive_name);
		var data = raw_partial_data.map(function(d) [d.archive_size, d.request_size]);
		
		<%= render :partial => '/graph/bar.js' %>
	
		vis.render();
	</script>
<% end %>
<h1>News Feed Data Analysis</h1>

<h2>Overview</h2>

<p>Unit testing demonstrates that news feeds can be uniquely identified using either: the user agent string <i>Apple-PubSub</i>; or the URL <i>/feed/</i>.</p>

<p>According to <%= link_to "What is my IP address?", "http://whatismyipaddress.com" %>, the IP address 76.191.195.140 originates from California, USA and is not present on any blacklist.</p>

<h2>Graphs</h2>

<h3>plot of event order (array position) vs log event timestamp (seconds)</h3>
<% data = @log_events.select(["log_events.id", "log_events.observed_at"]).all.map_with_index { |d, i| { :x => i, :y => d.observed_at.to_f, :id => d.id } } %>
<script type="text/javascript+protovis">	
	var data = <%=raw data.to_json %>;
	
	<%= render :partial => 'report/graph/area.js' %>
	
	ylabel.text(function(d) pv.Format.date("%d/%b/%y %H:%M:%S")(new Date(d*1000)));

	vis.render();
</script>
<p>
	<b>Notes:</b>
	<ul>
		<li>Lack of data points do not allow much to be concluded here.</li>
	</ul>
</p>
	
<h3>plot of event creation time (seconds from epoch) vs processing time (micro seconds)</h3>

<% data = @log_events.select(["log_events.observed_at", :processing_time]).order("log_events.observed_at").all.map { |d| { :x => d.observed_at.to_f, :y => d.processing_time } } %>

<%
	mean = mean(data.map { |d| d[:y] })/(10**6)
	stddev = standard_deviation(data.map { |d| d[:y] })/(10**6)
	averg = average(data.map { |d| d[:y] })/(10**6)
	upper_time_bound = [mean+stddev, averg+stddev].max
	upper_bound_color = "#B3C6FF"
%>

<script type="text/javascript+protovis">	
	var data = <%=raw data.to_json %>;
	
	<%= render :partial => 'report/graph/area.js' %>

	vis.add(pv.Rule)
		.bottom(y(<%= upper_time_bound*(10**6) %>))
		.strokeStyle(<%=raw upper_bound_color.to_json %>);

	xlabel.text(function(d) pv.Format.date("%d/%b/%y %H:%M:%S")(new Date(d*1000)));
	ylabel.text(function(d) (d/1000000)+" &mu;s");

	vis.render();
</script>
<p>
	<b>Notes:</b>
	<ul>
		<li>Lack of data points do not allow much to be concluded here.</li>
	</ul>
</p>
	
<h2>Appendix</h2>

<h3>Log Events with IP Address <%= params[:ip_address] %> and tagged rss</h3>

<%= render :partial => 'appendix', :locals => { :log_events => @log_events.ip_address(params[:ip_address]).tagged_with("rss") } %>

<h1>Research Notes</h1>

<ul>
	<li><%= link_to "URL Version Parameters", "/research/version" %></li>
	<li><%= link_to "IP Addresses", "/research/ip_address" %></li>
	<li>Wordpress Analysis:
		<ul>
			<li><%= link_to "Blog", "/research/wordpress" %>
			<li>Plugins
				<ul>
					<li><%= link_to "Contact Form 7", "/research/wordpress/plugin/contact-form-7" %></li>
					<li>Google Syntax Highlighter
						<ul>
							<li><%= link_to "Google Syntax Highlighter", "/research/wordpress/plugin/google-syntax-highlighter" %></li>
							<li><%= link_to "Easy Google Syntax Highlighter", "/research/wordpress/plugin/easy-google-syntax-highlighter" %></li>
						</ul>
					</li>
					<li><%= link_to "Google Analyticator", "/research/wordpress/plugin/google-analyticator" %></li>
				</ul>
			</li>
		</ul>
	</li>
	<li>RSS News Feed Analysis for:
		<ul>
			<li><%= link_to "10.0.1.2", "/research/web_server/rss/10.0.1.2" %></li>
			<li><%= link_to "208.80.69.74", "/research/web_server/rss/208.80.69.74" %></li>
			<li><%= link_to "65.88.2.5", "/research/web_server/rss/65.88.2.5" %></li>
			<li><%= link_to "76.191.195.140", "/research/web_server/rss/76.191.195.140" %></li>
		</ul>
	</li>
	<li>Server Loading Estimates:
		<ul>
			<li><%= link_to "Number of Requests", "/research/loading/requests" %></li>
			<li><%= link_to "Newsfeed Requests", "/research/loading/rss" %></li>
			<li><%= link_to "Static File Requests", "/research/loading/static" %></li>
			<li><%= link_to "Out of Order Log Events", "/research/loading/out_of_order" %></li>
		</ul>
	</li>
	<li><%= link_to "Maintenance Activity Estimate", "/research/maintenance" %></li>
	<li>Scanning Analysis:
		<ul>
			<li><%= link_to "World of Warcraft", "/research/scan/world-of-warcraft" %></li>
			<li><%= link_to "Proxy", "/research/scan/proxy" %></li>
			<li><%= link_to "Port 6677", "/research/scan/port-6677" %></li>
			<li><%= link_to "Port 6667", "/research/scan/port-6667" %></li>
		</ul>
	</li>
	<li>Web Bot Analysis:
		<ul>
			<li><%= link_to "NaverBot", "/research/bot/naverbot" %></li>
		</ul>
	</li>
	<li>Consistency Checks:
		<ul>
			<li>processing time attribute of Apache access log events</li>
			<li><%= link_to "CRON", "/research/cron" %></li>
			<li><%= link_to "unknown", "/research/unknown" %> attribute of Apache access log events</li>
		</ul>
	</li>
	<li><%= link_to "Web Server URL Hierarchy", "/research/file_system" %></li>
	<li><%= link_to "Worker Thread", "/research/process" %> Analysis</li>
</ul>

<% unless params[:chapter] == "by" %>
<h3>Timeline</h3>

<% data = [] %>
<% data << { :label => "10.0.1.14: POST /wp-cron.php?doing_wp_cron", :timeline => ApacheAccess.ip_address("10.0.1.14").tagged_with("wordpress").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "10.0.1.2: Apple-PubSub", :timeline => ApacheAccess.ip_address("10.0.1.2").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "10.0.1.2: OSX 10.6; Firefox 3.6.3", :timeline => ApacheAccess.ip_address("10.0.1.2").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "10.0.1.2: OSX 10.6; Safari 4.0.5", :timeline => ApacheAccess.ip_address("10.0.1.2").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) AppleWebKit/531.22.7 (KHTML, like Gecko) Version/4.0.5 Safari/531.22.7").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "65.88.2.5: Apple-PubSub", :timeline => ApacheAccess.ip_address("65.88.2.5").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "65.88.2.5: OSX 10.6; Firefox 3.6.3", :timeline => ApacheAccess.ip_address("65.88.2.5").user_agent("Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "208.80.69.74: Apple-PubSub", :timeline => ApacheAccess.ip_address("208.80.69.74").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "208.80.69.69: OSX 10.6; Safari 4.0.4", :timeline => ApacheAccess.ip_address("208.80.69.69").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "76.191.195.140: Apple-PubSub", :timeline => ApacheAccess.ip_address("76.191.195.140").tagged_with("rss").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "123.4.59.174: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("123.4.59.174").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "125.45.106.180: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("125.45.106.180").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.59.21: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("123.4.59.21").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "125.45.106.168: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("125.45.106.168").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.42.80: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("123.4.42.80").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.11.240.130: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("123.11.240.130").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "123.4.51.181: Windows XP; IE 6.0", :timeline => ApacheAccess.ip_address("123.4.51.181").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "190.167.70.87: Windows XP; Chrome 4.1.249.1045", :timeline => ApacheAccess.ip_address("190.167.70.87").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "190.166.87.164: Windows XP; Chrome 4.1.249.1059", :timeline => ApacheAccess.ip_address("190.166.87.164").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "201.229.176.217: Windows XP; Firefox 3.0.19", :timeline => ApacheAccess.ip_address("201.229.176.217").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "Naverbot", :timeline => ApacheAccess.tagged_with("bot").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "World of Warcraft Scanning", :timeline => ApacheAccess.tagged_with("world-of-warcraft,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Proxy Scanning", :timeline => ApacheAccess.tagged_with("proxy,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Port 6677 Scanning", :timeline => ApacheAccess.tagged_with("port-6677,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>
<% data << { :label => "Port 6667 Scanning", :timeline => ApacheAccess.tagged_with("port-6667,scan").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f+(d.processing_time.to_f/(10**6)), :event => d.to_s } } } %>

<% data << { :label => "server loading: transfer speed", :timeline => ApacheAccess.tagged_with("TODO").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "server loading: static files", :timeline => ApacheAccess.tagged_with("TODO").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "server loading: newsfeed access", :timeline => ApacheAccess.tagged_with("TODO").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "server loading: out of order events", :timeline => ApacheAccess.tagged_with("TODO").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "mod unique ID anomaly", :timeline => ApacheAccess.tagged_with(["anomaly", "unknown"]).order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "apache restart estimates", :timeline => ApacheAccess.tagged_with("TODO").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>

<% data << { :label => "subversion events", :timeline => Sudo.tagged_with("subversion").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "maintenance events", :timeline => Sudo.tagged_with("maintenance").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "install/build events", :timeline => Sudo.tagged_with("install").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "python events", :timeline => Sudo.tagged_with("python").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "apache2 events", :timeline => Sudo.tagged_with("apache").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "firewall events", :timeline => Sudo.tagged_with("firewall").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "botnet events", :timeline => Sudo.tagged_with("botnet").order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>
<% data << { :label => "suspicious user events", :timeline => Sudo.tagged_with(["odd", "user"]).order(:observed_at).all.map { |d| { :begin => d.observed_at.to_f, :end => d.observed_at.to_f, :event => d.to_s } } } %>

<script type="text/javascript+protovis">
	var data = <%=raw data.to_json %>;
	var events = "current-events";

	<%= render :partial => '/graph/timeline.js' %>

	vis.render();
</script>

<div id="current-events" class="events">
</div>
<% end %>
<% if params[:chapter] == "by" %>

<h3>Log Entries tagged <%= params[:tagged] %></h3>
	
<p>
<%= link_to "Data Set (CSV)", "/research/by.csv?#{params.keys.select { |k| ["ip_address", "user_agent", "tagged"].member? k }.map { |k| [k, params[k]].join("=") }.join('&') }" unless @data.empty? %>
<%= "No log events tagged #{params[:tagged]}" if @data.empty? %>
</p>
	
<% # TODO: add in paging code %>
<%= render :partial => 'data', :locals => { :data => @data.order(:observed_at).all } %>

<% end %>

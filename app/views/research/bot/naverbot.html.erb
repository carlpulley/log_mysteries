<h1>NaverBot Analysis</h1>

<script>
	var raw_data = <%=raw @data.to_json %>;
</script>

<h2>Overview</h2>

<p>The URL (taken from the user agent string) <%= link_to "help.naver.com", "http://help.naver.com/customer_webtxt_02.jsp" %> redirects to a web page written in Korean. Using Google translator, this page discusses how to configure and install a robots.txt file.</p>

<p>According to <%= link_to "internetofficer.com", "http://www.internetofficer.com/web-robot/naver/" %>, NaverBot appears to be a legitimate South Korean search engine.</p>

<p><%= link_to "user-agent-string.info", "http://user-agent-string.info/list-of-ua/bot-detail?bot=NaverBot" %> reaffirms that NaverBot is a Korean web crawler and, moreover, confirms that the IP addresses logged below are consistent with NaverBot.</p>

<h3>IP Addresses</h3>

<p>Grouping our IP Address data using country codes, ASN numbers and IP address subnets provides us with the following structured network diagram (leaf node colour encodes the frequency of requests via a logarithmic heat scale):
<center>
<% # TODO: add in some events so that label clicks map to /research/by?ip_address=#{label} -%>
<script type="text/javascript+protovis">
	var root = "";
	var data = pv.nest(raw_data).key(function(d) d.cc).key(function(d) d.asn).key(function(d) d.ip_address.split(".")[0]).key(function(d) d.ip_address.split(".")[1]).key(function(d) d.ip_address.split(".")[2]).key(function(d) d.ip_address.split(".")[3]).key(function(d) d.ip_address).sortKeys().rollup(function(v) v.first().request_count);

	<%= render :partial => '/graph/dendrogram.js' %>

	vis.height(500).width(1000).bottom(100).top(20);

	layout.orient("top");

	dot.fillStyle(function(n) n.firstChild ? "#aec7e8" : pv.Scale.log(<%= @data.map{ |d| d[:request_count] }.min %>, <%= @data.map{ |d| d[:request_count] }.max %>).range('blue', 'red')(n.nodeValue));
	
	label.text(function(n) n.firstChild ? (n.depth*7 >= 3 ? "/"+(8*(n.depth*7-2)) : (n.nodeName != "" && n.depth*7 >= 2 ? "ASN: "+n.nodeName : n.nodeName)) : n.nodeName);
	
	vis.render();
</script>
</center>

<h3>IP Address Blacklisting</h3>

<ul>
<% @data.map { |d| d[:ip_address] }.uniq.sort.each do |ip_address| %>
	<% if IpAddress.where(:value => ip_address).first.blacklists.empty? %>
	<li><%= ip_address %> not listed on any blacklists</li>
	<% else %>
	<li><%= ip_address %> listed on:
		<ul>
			<% IpAddress.where(:value => ip_address).first.blacklists.each do |blacklist| %>
			<li><%= link_to blacklist.site, blacklist.reference %></li>
			<% end %>
		</ul>
	</li>
	<% end %>
<% end %>
</ul>

<h2>Appendix</h2>

<%= link_to "Data Set (CSV)", "/research/by.csv?#{params.keys.select { |k| ["ip_address", "user_agent", "tagged"].member? k }.map { |k| [k, params[k]].join("=") }.concat(["tagged=bot", "user_agent=naverbot"]).join("&") }" %>

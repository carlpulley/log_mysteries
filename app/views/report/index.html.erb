<h1>Partial Analysis of <%= link_to "santized_log.zip", "http://honeynet.org/challenges/2010_5_log_mysteries" %></h1>

<h2>Contents</h2>

<ul>
	<li><%= link_to "Wordpress", "/report/by?tagged=wordpress" %>
		<ul>
			<li><%= link_to "Blog", "/report/wordpress/core" %>
			<li>Plugins
				<ul>
					<li><%= link_to "Contact Form 7", "/report/wordpress/plugin/contact-form-7" %></li>
					<li>TODO: finish off plugin analysis</li>
				</ul>
			</li>
		</ul>
	</li>
	<li><%= link_to "RSS News Feed", "/report/by?tagged=rss" %> Analysis for:
		<ul>
			<li><%= link_to "10.0.1.2", "/report/web_server/rss/10.0.1.2" %></li>
			<li>TODO: finish off RSS analysis by IP address</li>
		</ul>
	</li>
	<li><%= link_to "Scanning", "/report/by?tagged=scan" %> Analysis:
		<ul>
			<li><%= link_to "World of Warcraft", "/report/scan/world-of-warcraft" %></li>
			<li>TODO: finish off scanning analysis</li>
		</ul>
	</li>
	<li><%= link_to "Web Bot", "/report/by?tagged=bot" %> Analysis:
		<ul>
			<li><%= link_to "NaverBot", "/report/bot/naverbot" %></li>
		</ul>
	</li>
</ul>

<h2>Overview</h2>

<p>A visual examination of www-access.log and www-media.log suggests that we should initially group the data by: the remote IP address; and the user agent string (see the appendix below). Using this grouping of our data, we may then tag (see lib/tasks/tag_log_events.rake) Log Entry instances based on their observed interactions with our web server. The top-level links in our contents listing above represent the results of this analysis.</p>

<p>www-access.log holds access information for each page that a client requests, whilst www-media.log holds access information for the resources on each page requested.</p>

<p>By examining the referrer attributes of log entries tagged with <%= link_to "wordpress", "/report/by?tagged=wordpress" %> we are able to identify that the Apache server is hosting web sites located at:
	<ul>
		<li>http://www.domain.org/</li>
		<li>http://24.4.108.196/</li>
	</ul>
Which leads one to suspect that the server is possibly located at 24.4.108.196 and www.domain.org resolves to this IP address.
</p>

<h2>Appendix</h2>

<h3>Log Events <%= " Tagged with: #{params[:tagged]}" if params[:tagged] %> (Grouped by IP address and User Agent)</h3>

<script type="text/javascript+protovis">
function sparkbar(data) {
  var w = 24*5,
      h = 12;

  var hs = pv.Scale.linear(0, 255).range(0, h);

  var vis = new pv.Panel()
      .width(w)
      .height(h);

  vis.add(pv.Bar)
      .data(data.toArray())
      .width(4)
      .left(function() 5 * this.index)
      .height(function(d) hs(d.charCodeAt()))
      .bottom(0);

  vis.render();
}

function sparklength(data, mw) {
  var h = 12, pw = 24*5;

  var ws = pv.Scale.linear(0, mw).range(0, pw);
  
  var vis = new pv.Panel()
      .width(pw)
      .height(h)
	  .fillStyle("#B3C6FF");

  vis.add(pv.Bar)
      .height(h)
      .width(ws(data));
  
  vis.render();
}

function sparkcolour(data) {
  var vis = new pv.Panel()
	.width(12)
	.height(12);
	
  vis.add(pv.Dot)
	.bottom(6)
	.left(6)
	.fillStyle(pv.Scale.linear(200, 300, 400, 600).range('green', 'yellow', 'red', 'black')(data))
	.render();
}
</script>
<pre>
	<% addresses = @log_events.group(:remote).select(:remote).all.map { |d| d.remote } %>
	<% agents = @log_events.group(:user_agent).select(:user_agent).all.map { |d| d.user_agent } %>
	<% addresses.each do |address| %>
		<% agents.each do |agent| %>
			<% unless @log_events.ip_address(address).user_agent(agent).order(:observed_at).count == 0 %>
  <b>IP Address: <i><%= address %></i></b>
  <b>User Agent: <i><%= agent %></i></b>
				<% @log_events.ip_address(address).user_agent(agent).order(:observed_at).all.each do |event| %>
  <%= event.observed_at.in_time_zone('Pacific Time (US & Canada)').strftime("%d/%b/%Y:%H:%M:%S %z") %> <script type="text/javascript+protovis">sparkcolour(<%=raw event.result.to_json %>)</script> <script type="text/javascript+protovis">sparklength(<%=raw event.bytes.to_json %>, <%= @log_events.maximum(:bytes) %>)</script> <script type="text/javascript+protovis">sparkbar(<%=raw event.unknown.to_json %>);</script> <script type="text/javascript+protovis">sparklength(<%=raw event.processing_time.to_json %>, <%= @log_events.maximum(:processing_time) %>)</script> <%= event.referer == '-' ? event.http[:verb] : "#{event.referer} -> #{event.http[:verb]}" %> <%= event.http[:uri] %>
				<% end %>
<br />
			<% end %>
		<% end %>
	<% end %>
</pre>


<h1>Scanning Analysis: Web Proxy</h1>

<script>
	var raw_data = <%=raw @data.to_json %>;
</script>

<h2>Overview</h2>

<p>All these scan attempts result in 400 (the request had bad syntax or was inherently impossible to be satisfied) or 404 (the server has not found anything matching the URI given) error responses from the web server - ie. these scans failed.</p>

<h3>Wantsfly</h3>

<p>The Wantsfly URLs contain the hash value FABB83E72D135F1018046CC4005088B36F8D0BEDCEA7. This hash value is probably being used as a session value by the proxy scanner. Googling suggests that this is Chinese proxy scanner.</p>

<h3>Proxyfire</h3>

<p>Using the requested URL, we have that the web site <%= link_to "Proxyfire", "http://www.proxyfire.net" %> appears to be a forum listing various proxies and discussing proxy related issues.</p>

<h3>IP Addresses</h3>

<p>Grouping our IP Address data using country codes, ASN numbers and IP address subnets provides us with the following structured network diagram (leaf node colour encodes the frequency of requests via a logarithmic heat scale):
<center>
<% # TODO: add in some events so that label clicks map to /research/by?ip_address=#{label} -%>
<script type="text/javascript+protovis">
	var root = "";
	var data = pv.nest(raw_data).key(function(d) d.cc).key(function(d) d.asn).key(function(d) d.ip_address.split(".")[0]).key(function(d) d.ip_address.split(".")[1]).key(function(d) d.ip_address.split(".")[2]).key(function(d) d.ip_address.split(".")[3]).key(function(d) d.ip_address).sortKeys().rollup(function(v) v.first().request_count);

	<%= render :partial => '/graph/dendrogram.js' %>

	vis.height(500).width(1000).bottom(100).top(20);

	layout.orient("top");

	dot.fillStyle(function(n) n.firstChild ? "#aec7e8" : pv.Scale.log(<%= @data.map{ |d| d[:request_count] }.min %>, <%= @data.map{ |d| d[:request_count] }.max %>).range('blue', 'red')(n.nodeValue));
	
	label.text(function(n) n.firstChild ? (n.depth*7 >= 3 ? "/"+(8*(n.depth*7-2)) : (n.nodeName != "" && n.depth*7 >= 2 ? "ASN: "+n.nodeName : n.nodeName)) : n.nodeName);
	
	vis.render();
</script>
</center>

<h3>IP Address Blacklisting</h3>

<ul>
<% @data.map { |d| d[:ip_address] }.uniq.sort.each do |ip_address| %>
	<% if IpAddress.where(:value => ip_address).first.blacklists.empty? %>
	<li><%= ip_address %> not listed on any blacklists</li>
	<% else %>
	<li><%= ip_address %> listed on:
		<ul>
			<% IpAddress.where(:value => ip_address).first.blacklists.each do |blacklist| %>
			<li><%= link_to blacklist.site, blacklist.reference %></li>
			<% end %>
		</ul>
	</li>
	<% end %>
<% end %>
</ul>

<h2>Appendix</h2>

<%= link_to "Data Set (CSV)", "/research/by.csv?#{params.keys.select { |k| ["ip_address", "user_agent", "tagged"].member? k }.map { |k| [k, params[k]].join("=") }.concat(["tagged=proxy,scan"]).join("&") }" %>

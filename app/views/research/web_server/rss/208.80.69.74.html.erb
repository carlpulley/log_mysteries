<% content_for :title do %>
	News Feed Data Analysis
<% end %>

<% content_for :data do %>
<%
	def map_to_hash(data)
	  data.map_with_index { |d, i| { :position => i, :id => d.id, :observed_at => d.observed_at.to_f, :ip_address => d.ip_address.value, :request_count => d.ip_address.apache_accesses.count + d.ip_address.apache_errors.count, :asn => d.ip_address.asn || "", :cc => d.ip_address.cc || "", :blacklists => d.ip_address.blacklists.map { |b| { :site => b.site, :status => b.status } } } }
	end
-%>
	<script>
		var raw_data = <%=raw (map_to_hash @data).to_json %>;
	</script>
<% end %>

<% content_for :note do %>
	<p>Unit testing demonstrates that news feeds can be uniquely identified using either: the user agent string <i>Apple-PubSub</i>; or the URL <i>/feed/</i>.</p>
	
	<%= render :partial => 'ip_address', :locals => { :data => @data.map { |d| d.ip_address } } %>
		
	<h2>Graphs</h2>
	
	<h3>plot of event order (array position) vs log event timestamp (seconds)</h3>
	
	<script type="text/javascript+protovis">	
		var data = raw_data.map(function(d) { var h = {}; h['x'] = d['position']; h['y'] = d['observed_at']; return h; });
		
		<%= render :partial => '/graph/area.js' %>
		
		ylabel.text(function(d) pv.Format.date("%d/%b/%y %H:%M:%S")(new Date(d*1000)));
	
		vis.render();
	</script>
	<p>
		<b>Notes:</b>
		<ul>
			<%
				grad1 = @data[2][:observed_at] - @data[1][:observed_at]
				grad2 = @data[4][:observed_at] - @data[3][:observed_at]
				grad3 = @data[6][:observed_at] - @data[5][:observed_at]
				grad4 = @data[8][:observed_at] - @data[7][:observed_at]
				grad5 = @data[10][:observed_at] - @data[9][:observed_at]
				grad6 = @data[12][:observed_at] - @data[11][:observed_at]
			%>
			<script>
				var _mean = mean(<%=raw [grad1, grad2, grad3, grad4, grad5, grad6].to_json %>);
				var stddev = standard_deviation(<%=raw [grad1, grad2, grad3, grad4, grad5, grad6].to_json %>);
			</script>
			<li>From the graph we can visually see a number of clear patterns: every news feed access/refresh occurs twice (see <%= link_to "RSS Analysis: 65.88.2.5", "/research/web_server/rss/65.88.2.5" %> for more information on this behaviour); the accesses occur with a regular periodicity.</li>
			<li>By examining our graph data we are able to calculate:
				<ul>
					<li>between event indexes 1 and 2 we have a gradient of <%= grad1 %></li>
					<li>between event indexes 3 and 4 we have a gradient of <%= grad2 %></li>
					<li>between event indexes 5 and 6 we have a gradient of <%= grad3 %></li>
					<li>between event indexes 7 and 8 we have a gradient of <%= grad4 %></li>
					<li>between event indexes 9 and 10 we have a gradient of <%= grad5 %></li>
					<li>between event indexes 11 and 12 we have a gradient of <%= grad6 %></li>
					<li>Thus, we get mean gradient of <script>document.write(_mean.toFixed(2));</script> and a standard deviation of <script>document.write(stddev.toFixed(2));</script></li>
					<li>Whence we have that our RSS feed refresh rate is estimated as being once every <script>document.write((_mean/60).toFixed(2));</script>Â±<script>document.write((stddev/60).toFixed(2));</script> minutes.</li>
				</ul>
			</li>
		</ul>
	</p>
<% end %>
<% tag_names = [:commands, :packages, :debtags, :pwds, :users] -%>

<% content_for :data do %>
<%
	def map_to_hash(data)
		data.map_with_index { |d, i| { :label => d.name, :frequency => number_with_precision(100*d.count.to_f/@data.count, :precision => 1).to_f } }
	end
-%>
	<script>
		<% tag_names.each do |item| -%>
		var <%= item %>_raw_data = <%=raw (map_to_hash @data.tag_counts_on(item).order(:name)).to_json %>;
		<% end -%>
		var blue = "#897EFF"; 
		var red = "#FF5254";
	</script>
<% end %>

<% content_for :note do %>
	<div class="tabs">
		<ul class="menu">
			<% tag_names.each do |item| -%>
			<li id="<%= item %>" class="tab<%= " current" if item == tag_names.first %>"><a class="tab"><%= item.to_s.titleize %></a></li>
			<% end -%>
		</ul>
		
		<% tag_names.each do |item| -%>
		<% if item == :pwds -%>
		<div id="pwds" class="content">
			<h3>Pwd frequency count (%) <a href="http://en.wikipedia.org/wiki/Trie">trie</a></h3>
			
			<script type="text/javascript+protovis">
			    var root = "";
			    var data = pv.tree(pwds_raw_data).keys(function(d) d.label.split("/")).map();
				var min_freq = pwds_raw_data.map(function(d) { return d.frequency; }).min();
				var max_freq = pwds_raw_data.map(function(d) { return d.frequency; }).max();
			    var c = pv.Scale.linear(min_freq == max_freq ? 0 : min_freq, max_freq).range(blue, red);
				
				if (data.length == 0) {
					$$("div#pwds.content").each(function(e) e.insert("<p>Plot data is empty!</p>"));
				} else {
					<%= render :partial => "/graph/dendrogram.js" %>
					
					vis.height(500).width(700).bottom(100).left(20);
					
					dot.fillStyle(function(n) c(n.nodeValue));

					label.text(function(n) n.lastChild ? n.nodeName : n.nodeName+" ("+n.nodeValue+"%)");

					vis.render();
				}
			</script>
		</div>		
		<% elsif item == :users -%>
		<div id="users" class="content">
			<h3>Users frequency count (%) adjacency matrix</h3>
			
			<script type="text/javascript+protovis">
				<% users = (@data.map { |d| d.message[:subject] } + @data.map { |d| d.message[:user] }).uniq.sort -%>
			    var data = {
					nodes: <%=raw users.to_json %>,
					links: <%=raw @data.map { |d| { :source => users.index(d.message[:subject]), :target => users.index(d.message[:user]), :value => 100*@data.select { |e| e.message[:subject] == d.message[:subject] and e.message[:user] == d.message[:user] }.count.to_f/@data.count } }.uniq.to_json %>
				};
				var min_freq = users_raw_data.map(function(d) { return d.frequency; }).min();
				var max_freq = users_raw_data.map(function(d) { return d.frequency; }).max();
			    var colour = pv.Scale.linear(min_freq == max_freq ? 0 : min_freq, max_freq).range(blue, red);
				
				if (data.length == 0) {
					$$("div#users.content").each(function(e) e.insert("<p>Plot data is empty!</p>"));
				} else {
					<%= render :partial => '/graph/matrix.js' %>
					
					vis.render();
				}
			</script>
		</div>		
		<% else -%>
		<div id="<%= item %>" class="content">
			<h3><%= item.to_s.singularize.capitalize %> frequency counts (%) vs <%= item.to_s.singularize %> string</h3>
			
			<script type="text/javascript+protovis">
				var labels = <%= item %>_raw_data.map(function(d) { return d.label; });
				var data = <%= item %>_raw_data.map(function(d) { return [d.frequency]; });
				var min_freq = <%= item %>_raw_data.map(function(d) { return d.frequency; }).min();
				var max_freq = <%= item %>_raw_data.map(function(d) { return d.frequency; }).max();
			    var c = pv.Scale.linear(min_freq == max_freq ? 0 : min_freq, max_freq).range(blue, red);
				
				if (data.length == 0) {
					$$("div#<%= item %>.content").each(function(e) e.insert("<p>Plot data is empty!</p>"));
				} else {
					<%= render :partial => "/graph/bar.js" %>
					
					bar.fillStyle(function(d) c(d));
					vis.anchor("bottom").add(pv.Label).textAlign("center").text("% frequency");
					vis.anchor("left").add(pv.Label).left(-100).textAngle(-Math.PI/2).text("<%= item %>");
					
					vis.render();
				}
			</script>
		</div>
		<% end -%>
		<% end -%>
	</div>
<% end %>

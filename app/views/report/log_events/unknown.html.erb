<h1>Log Event Analysis of <i>unknown</i> Attribute</h1>

<h2>Overview</h2>

<p>By analysing the <i>unknown</i> attribute we are able to determine that:
	<ul>
		<li>the version of Apache2 installed is at revision number 420893 or below - under the assumption that <%= link_to "tagged", "http://svn.apache.org/viewvc/httpd/httpd/tags/" %> versions of Apache2 are installed, then we have that Apache2 is at most version 2.2.2</li>
		<li>mod_unique_id is installed and enabled on the server</li>
		<li>for each log entry we can assert the process ID and thread index that dealt with the request</li>
		<li>one log event at time index 19/Apr/2010:11:19:21 -0700 in www-media.log fails to match the timestamp value of the <i>unknown</i> attribute</li>
	</ul>
</p>

<h2>Detailed Analysis</h2>

<p>Apache2 has a module named <%= link_to "mod_unique_id", "http://httpd.apache.org/docs/2.0/mod/mod_unique_id.html" %>. The module documentation informs us that the tuple <code>( ip_addr, pid, time_stamp, counter )</code>, via an algorithm similar to MIME base64, is encoded as a 19 character string using the characters [A-Za-z0-9+/]. The resulting value is placed in the UNIQUE_ID environment variable. We hypothesis here that the <i>unknown</i> attribute is related to the contents of this environment variable.</p>

<p>Viewing the subversion <%= link_to "mod_unique_id commit log", "http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/metadata/mod_unique_id.c?view=log" %>, we see that revision 596448 is the latest version of code that our server could have used (this is based on the commit log timestamps and that the last Apache log entry timestamp, in the santized_log/apache/* log files, is the 24<sup>th</sup> April 2010 18:52:24 PST.</p>

<p>In viewing revision 596448 of the <%= link_to "mod_unique_id source code", "http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/metadata/mod_unique_id.c?revision=596448&view=markup" %>, we notice that (despite the documentation) the tuple <code>( time_stamp, in_addr, pid, counter, thread_index )</code> is in fact used to generate our UNIQUE_ID value - this  explains why the <i>unknown</i> attribute is in fact 24 characters in length and not 19 (BTW, revision 981084 fixes the incorrectly commented code). According to the source code, the size of the UNIQUE_ID string is:
	<center>((size_of(unsigned int)+size_of(unsigned int)+size_of(unsigned int)+size_of(unsigned short)+size_of(unsigned int)) * 8 + 5) div 6 
		<br />= ((4+4+4+2+4) * 8 + 5) div 6 
		<br />= 24 characters</center>
</p>
	
<p>From this source code we find that a standard MIME base64 encoding is used followed by translating the '+' character to '@' and the '/' character to '-'. This allows us to easily reverse engineer our UNIQUE_ID values and so extract the original input tuple. Hypothesis testing on our tuple's timestamp value can then be attempted.</p>

<p>Revision 596448 differs from revision 420893 in the way in which it handles the <code>timestamp</code> value. As a result we get that:
	<ul>
		<%
		timestamp_596448 = "Base64.decode64(LogEvent.first.unknown.tr('-', '/').tr('@', '+'))[0..3]"
		%>
		<li>if we assume that mod_unique_id is at revision 596448, then our request time is stored in seconds. Working with <%= timestamp_596448 %>, we calculate a timestamp value of <%= Time.at((eval timestamp_596448).split("").map { |n| n.ord }.inject(0) { |t, n| t*256 + n }) %> which fails to agree with the observed timestamp value of <%= LogEvent.first.observed_at %>. Thus we deduce that mod_unique_id must be at a revision prior to 596448.</li>
		<li>if we assume that mod_unique_id is at revision <%= link_to "420893", "http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/metadata/mod_unique_id.c?revision=420983&view=markup" %>, then our request time is the bottom 4 bytes of the current time in micro-seconds. Our reasoning here is as follow:
			<ul>
				<li>From lines 278 and 307 of <%= link_to "mod_unique_id", "http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/metadata/mod_unique_id.c?revision=420983&view=markup" %> we have that request_time is a field of request_rec</li>
				<li>From line 783 of <%= link_to "httpd.h", "http://svn.apache.org/viewvc/httpd/httpd/trunk/include/httpd.h?revision=420983&view=markup" %> we have that the request_time field of request_rec has type apr_time_t</li>
				<li>From <%= link_to "", "http://svn.apache.org/viewvc/httpd/httpd/trunk/include/httpd.h?revision=420983&view=markup" %> we have that apr_time_t is type defined to be apr_int64_t</li>
				<li>From <%= link_to "", "" %> we have that apr_int64_t is an 8 byte integer representing time from epoch in mico-seconds</li>
				<li>From line 307 of <%= link_to "mod_unique_id", "http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/metadata/mod_unique_id.c?revision=420983&view=markup" %> we have a type cast of (effectively) an unsigned long int (ie. 8 bytes) into an unsigned int - this means that we only copy the bottom 4 bytes of the 8 byte value</li>
			</ul>
		</li>
	</ul>
	From the above, we see that when comparing our timestamp value (translated to seconds!) against our observed log event timestamp, we can only compare the bottom 4 bytes of the two values.
</p>
<p> That our timestamp correlates correctly with our observed log event timestamps has been confirmed using unit tests. The only log event that fails to match our expectations is the following log event taken from www-media.log:
<pre>
  201.229.176.217 - - [19/Apr/2010:11:19:21 -0700] "GET /favicon.ico HTTP/1.1" 200 3654 "-" "Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.0.19) Gecko/2010031422 Firefox/3.0.19" AABohgoAAQ4AAHbXLg8AAAAK 839
</pre>
</p>

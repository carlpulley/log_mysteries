<h1>WordPress Analysis</h1>

<script>
	var raw_data = <%=raw @data.to_json %>;
</script>

<h2>Overview</h2>

<p>By examining the <i><%= github_link "lib/tasks/apache_access/tag_versions.rake", "ver" %></i> parameter string for log entries tagged with <%= link_to "wordpress", "/research/by?tagged=wordpress,version" %>, we are able to extract the version number 2.9.2 which, because of its <%= link_to "frequency", "/research/version" %>, we believe it is the version for WordPress.</p>

<p><%= github_link "lib/tasks/wordpress.rake", "Downloading" %> (<%= github_link "test/unit/wordpress_test.rb", "verification" %>) version 2.9.2 of <%= link_to "WordPress", "http://wordpress.org/download/release-archive/" %> then allows us to match the contents of the resulting tar ball against instances of the ApacheAccess model.</p>

<p>Those URLs that are tagged with wordpress but are not tagged as plugins, and that also do not appear within version 2.9.2 of the downloaded <%= link_to "WordPress", "http://wordpress.org/download/release-archive/" %> archive are as follows:
	<ul>
		<% ApacheAccess.tagged_with("wordpress").tagged_with("plugin", :exclude => true).all.map { |d| d.http[:uri] }.uniq.each do |url| %>
			<% expected_filename = $1 if url =~ /^(.*?)(\?.*)?$/ %>
			<% unless Wordpress.where(["name = ?", "wordpress#{expected_filename}"]).exists? %>
				<li><i><%= expected_filename %></i></li>
			<% end %>
		<% end %>
	</ul>
</p>

<p>Plotting a bar graph of plugin file and URL file against number of bytes in the respective file (see below), allows a cross-view analysis to be performed. This analysis shows that the files:
	<ul>
		<% ["/wp-includes/js/jquery/jquery.form.js", "/wp-includes/js/jquery/jquery.js"].each do |filename| %>
			<li><i><%= filename %></i></li>
		<% end %>
	</ul>
have sizes consistent with the downloaded plugin - unit <%= github_link "test/unit/wordpress/wordpress_archive_contents_test.rb", "testing" %> further confirms this assertion.</p>

<h2>plugin file and URL file (file names) vs. file size (bytes)</h2>

<% archive_data = Wordpress.where(:directory => false).select([:name, :size]).all %>
<% log_event_sizes = archive_data.map { |d| @log_events.url(d.name).where(:result => 200).get.maximum(:bytes) || 0 } %>
<script type="text/javascript+protovis">
	//var labels = <%=raw archive_data.map { |d| d.name }.to_json %>;
	//var data = <%=raw archive_data.map { |x| x.size}.zip(log_event_sizes).to_json %>;
	var labels = raw_data.archive.map(function(d) d.name);
	var data = pv.nest(raw_data).key(function(d) d.name).rollup(function(v) );
	
	<%= render :partial => '/graph/bar.js' %>

	vis.render();
</script>

<h2>Appendix</h2>

<%= link_to "Data Set (CSV)", "/research/wordpress.csv" %>
